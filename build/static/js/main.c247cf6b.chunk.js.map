{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/PersonService.js","components/Notification.js","App.js","index.js"],"names":["Filter","state","onChange","value","PersonForm","onSubmit","nameState","onNameChange","numberState","onNumberChange","type","Person","name","number","Persons","persons","deleteHandler","map","person","onClick","baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Notification","message","common","background","fontSize","borderStyle","borderRadius","padding","marginBottom","success","color","error","style","TIMEOUT","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personsToShow","filter","toUpperCase","includes","updateName","window","confirm","updatedPerson","returnedPerson","p","setTimeout","e","target","preventDefault","personFound","find","newPerson","concat","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c247cf6b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ state, onChange }) => {\n  return (\n    <div>\n      filter shown with <input value={state} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  onSubmit,\n  nameState,\n  onNameChange,\n  numberState,\n  onNumberChange,\n}) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={nameState} onChange={onNameChange} />\n      </div>\n      <div>\n        number: <input value={numberState} onChange={onNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ name, number }) => {\n  return (\n    <span>\n      {name} {number}\n    </span>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({ persons, deleteHandler }) => {\n  return (\n    <>\n      {persons.map((person) => (\n        <div key={person.name}>\n          <Person name={person.name} number={person.number} />{\" \"}\n          <button onClick={() => deleteHandler(person)}>Delete</button>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Persons;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  // If success should return empty object\n  return request.then((response) => response.data);\n};\n\nconst personService = { getAll, create, update, remove };\nexport default personService;\n","const Notification = ({ message, type }) => {\n  const common = {\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n\n  const success = { ...common, color: \"green\" };\n  const error = { ...common, color: \"red\" };\n\n  const style = type === \"success\" ? success : error;\n\n  return <div style={style}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personService from \"./services/PersonService\";\nimport Notification from \"./components/Notification\";\n\nconst TIMEOUT = 3500;\n\nconst App = () => {\n  // State\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Effect Hook\n  useEffect(\n    () => personService.getAll().then((persons) => setPersons(persons)),\n    []\n  );\n\n  const handleDelete = (person) => {\n    if (window.confirm(`Delete ${person.name}?`) === true) {\n      personService\n        .remove(person.id)\n        .then(() => {\n          setPersons(persons.filter((p) => p.id !== person.id));\n        })\n        .catch(() => {\n          setErrorMessage(\n            `Information of ${person.name} has already been removed from the server`\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, TIMEOUT);\n          setPersons(persons.filter((p) => p.id !== person.id));\n        });\n    }\n  };\n\n  const personsToShow =\n    newFilter === \"\"\n      ? persons\n      : persons.filter((person) =>\n          person.name.toUpperCase().includes(newFilter.toUpperCase())\n        );\n\n  const addName = (e) => {\n    e.preventDefault();\n\n    const personFound = persons.find((p) => p.name === newName);\n\n    if (typeof personFound !== \"undefined\") {\n      updateName(personFound);\n    } else {\n      const newPerson = { name: newName, number: newNumber };\n      personService.create(newPerson).then((person) => {\n        setPersons(persons.concat(person));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setSuccessMessage(`Added ${newName}`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, TIMEOUT);\n      });\n    }\n  };\n\n  const updateName = (person) => {\n    if (\n      window.confirm(\n        `${person.name} is already added to the phonebook, replace the old number with a new one?`\n      ) === true\n    ) {\n      const updatedPerson = { name: person.name, number: newNumber };\n\n      personService.update(person.id, updatedPerson).then((returnedPerson) => {\n        setPersons(\n          persons.map((p) => (p.id !== person.id ? p : returnedPerson))\n        );\n        setSuccessMessage(`Updated ${newName}'s number`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, TIMEOUT);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleFilterChange = (e) => {\n    setNewFilter(e.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      {/*if else doesn't work in JSX... testing immediately invoked function*/}\n      {(() => {\n        if (successMessage !== null) {\n          return <Notification message={successMessage} type=\"success\" />;\n        }\n        if (errorMessage !== null) {\n          return <Notification message={errorMessage} type=\"error\" />;\n        }\n      })()}\n\n      <Filter state={newFilter} onChange={handleFilterChange} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        onSubmit={addName}\n        nameState={newName}\n        onNameChange={handleNameChange}\n        numberState={newNumber}\n        onNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Persons persons={personsToShow} deleteHandler={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}