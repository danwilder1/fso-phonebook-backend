{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/People.js","services/PeopleService.js","components/Notification.js","App.js","index.js"],"names":["Filter","state","onChange","value","PersonForm","onSubmit","nameState","onNameChange","numberState","onNumberChange","type","Person","name","number","People","people","deleteHandler","map","person","onClick","baseUrl","PeopleService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Notification","message","common","background","fontSize","borderStyle","borderRadius","padding","marginBottom","success","color","error","style","App","useState","setPeople","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","successMessage","setSuccessMessage","useEffect","peopleToShow","filter","toUpperCase","includes","updateName","window","confirm","updatedPerson","returnedPerson","p","setTimeout","e","target","preventDefault","personFound","find","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6af4b5c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ state, onChange }) => {\n  return (\n    <div>\n      filter shown with <input value={state} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  onSubmit,\n  nameState,\n  onNameChange,\n  numberState,\n  onNumberChange,\n}) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={nameState} onChange={onNameChange} />\n      </div>\n      <div>\n        number: <input value={numberState} onChange={onNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ name, number }) => {\n  return (\n    <span>\n      {name} {number}\n    </span>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst People = ({ people, deleteHandler }) => {\n  return (\n    <>\n      {people.map((person) => (\n        <div key={person.name}>\n          <Person name={person.name} number={person.number} />{\" \"}\n          <button onClick={() => deleteHandler(person)}>Delete</button>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default People;\n","import axios from \"axios\";\nconst baseUrl = \"/api/people\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  // If success should return empty object\n  return request.then((response) => response.data);\n};\n\nconst PeopleService = { getAll, create, update, remove };\nexport default PeopleService;\n","const Notification = ({ message, type }) => {\n  const common = {\n    background: \"lightgrey\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n\n  const success = { ...common, color: \"green\" };\n  const error = { ...common, color: \"red\" };\n\n  const style = type === \"success\" ? success : error;\n\n  return <div style={style}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport People from \"./components/People\";\nimport PeopleService from \"./services/PeopleService\";\nimport Notification from \"./components/Notification\";\n\nconst TIMEOUT = 3500;\n\nconst App = () => {\n  // State\n  const [people, setPeople] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  //const [errorMessage, setErrorMessage] = useState(null);\n\n  // Effect Hook\n  useEffect(\n    () => PeopleService.getAll().then((people) => setPeople(people)),\n    []\n  );\n\n  const handleDelete = (person) => {\n    if (window.confirm(`Delete ${person.name}?`) === true) {\n      PeopleService.remove(person.id).then(() => {\n        setPeople(people.filter((p) => p.id !== person.id));\n      });\n      /* Pre DB:\n        .catch(() => {\n          setErrorMessage(\n            `Information of ${person.name} has already been removed from the server`\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, TIMEOUT);\n          setPeople(people.filter((p) => p.id !== person.id));\n          \n        });\n        */\n    }\n  };\n\n  const peopleToShow =\n    newFilter === \"\"\n      ? people\n      : people.filter((person) =>\n          person.name.toUpperCase().includes(newFilter.toUpperCase())\n        );\n\n  const addName = (e) => {\n    e.preventDefault();\n\n    const personFound = people.find((p) => p.name === newName);\n\n    if (typeof personFound !== \"undefined\") {\n      updateName(personFound);\n    } else {\n      const newPerson = { name: newName, number: newNumber };\n      PeopleService.create(newPerson).then((person) => {\n        setPeople(people.concat(person));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setSuccessMessage(`Added ${newName}`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, TIMEOUT);\n      });\n    }\n  };\n\n  const updateName = (person) => {\n    if (\n      window.confirm(\n        `${person.name} is already added to the phonebook, replace the old number with a new one?`\n      ) === true\n    ) {\n      const updatedPerson = { name: person.name, number: newNumber };\n\n      PeopleService.update(person.id, updatedPerson).then((returnedPerson) => {\n        setPeople(people.map((p) => (p.id !== person.id ? p : returnedPerson)));\n        setSuccessMessage(`Updated ${newName}'s number`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, TIMEOUT);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleFilterChange = (e) => {\n    setNewFilter(e.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      {/*if else doesn't work in JSX... testing immediately invoked function*/}\n      {(() => {\n        if (successMessage !== null) {\n          return <Notification message={successMessage} type=\"success\" />;\n        }\n        //if (errorMessage !== null) {\n        //return <Notification message={errorMessage} type=\"error\" />;\n        //}\n      })()}\n\n      <Filter state={newFilter} onChange={handleFilterChange} />\n\n      <h2>add a new</h2>\n      <PersonForm\n        onSubmit={addName}\n        nameState={newName}\n        onNameChange={handleNameChange}\n        numberState={newNumber}\n        onNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <People people={peopleToShow} deleteHandler={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}